version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    expose:
      - "6379"

  worker:
    build: ./taskexecutor
    container_name: task_executor
    depends_on:
      - redis
    environment:
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MB_HOST=redis
      - MB_PORT=6379

  api:
    build:
      context: ./server
      target: release
    container_name: finance-app
    environment:
      - DB_USERNAME=master
      - DB_PASSWORD=secret
      - DB_HOST= db
      - DB_PORT=5432
      - DB_NAME=finance
      - WAIT_HOSTS=db:5432
      - MB_HOST=redis
      - MB_PORT=6379
      - APP_URL=${APP_URL}
      - APP_JWT_KEY=${JWT_KEY}
      - APP_ENVIRONMENT=PRODUCTION
      - GOOGLE_REDIRECT_URL=${GOOGLE_REDIRECT_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - migrate
      - redis
    expose:
      - "5000"

  client:
    build:
      context: ./client
      target: release
    container_name: finance-client
    ports:
      - "443:443"
    volumes:
      - ./client:/app
      - ${CERT_PATH}:/certs:ro
    depends_on:
      - api

  migrate:
    build:
      context: ./database
    container_name: migrate
    depends_on:
      - db
    entrypoint: ["sh", "/wait-for-it.sh", "db", "--", "migrate", "-path", "/migrations", "-database", "postgres://master:secret@db:5432/finance?sslmode=disable", "up"]

  db:
    image: postgres:16.3-alpine
    container_name: postgres-db
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: master
      POSTGRES_DB: finance
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000" # 3000 is default, remap to avoid clash with app
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"     # gRPC OTLP
      - "55681:55681"   # legacy HTTP
      - "8888:8888"     # metrics for Prometheus to scrape
      - "4318:4318"     # OTLP HTTP (optional)

volumes:
  postgres_data:
  redis_data:
  grafana-data:
